@import './mixin';

//Mixins
/// 重置全局样式
/// @param {string} $mode Mode(默认使用'normalize')
@mixin reset($mode:'normalize'){
    @if $mode == 'normalize'{
        /*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
        html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:0;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}
    }
    @else if $mode == 'full'{}
}

//Mixins
/// 设置全局盒模型
/// @param {string} $model Model(默认使用怪异盒模型)
@mixin boxModel($model:'border'){
    $x: $model + '-box';
    html{
        box-sizing: #{$x};
    }
    *,
    *:after,
    *:before{
        box-sizing: inherit;
    }
}

/*公共样式*/
@mixin public-css {
    .ky-container {
        margin-left: auto;
        margin-right: auto;
        //max-width: 1380px;
        @extend %clearfix;
    }
    .ky-row {
        @extend %clearfix;
        margin: 0 0 -1px -30px;
    }
    .ky-row > * {
        float: left;
        padding: 0 0 0 30px;
    }
}

/*布局类*/
$breakpoints: () !global;
//设置媒体查询条件，赋值后仍需设定为全局变量
@mixin skel-breakpoints($x: ()) {
    $breakpoints: $x !global;
}
@mixin screen($res-max) {
    //设置媒体查询条件
    @media screen and ($res-max) {
        @content;
    }
}
@mixin skel-layout($config: ()) {
    $configBreakpoints: ();
    $z: map-get($config,'breakpoints');

    @if $z {
        //备份设备键值
        $configBreakpoints: $z;
    }

    //重置样式
    $x: map-get($config, 'reset');
    @if($x){
        @include reset($x);
    }

    //统一盒模型
    $x:map-get($config, 'boxModel');
    @if($x){
        @include boxModel($x);
    }

    $containers: map-get($config,'containers');

    @if $containers {
        //添加公共样式
        @include public-css;
        //循环提取布局类width——containers
        @each $name in map-keys($breakpoints) {

            //获取单个设备类型
            $x: map-get($configBreakpoints, $name);
            $gutters: ();

            @if $x {
                
                //获取布局width
                $y: map-get($x,'containers');

                @if $y {
                    //重新赋值
                    $containers: $y;
                }

                //获取内边距集合
                $g: map-get($x,'grids');
                @if $g {
                    $gutters: $g;
                }
            }
            //设置媒体查询条件以及样式
            @include screen(map-get($breakpoints, $name)) {
                .ky-container {
                    width: $containers;
                    //padding-left: nth($gutters,1);
                    //padding-right: nth($gutters,2);
                }

                .ky-row {
                    //margin: 0 0 0 -#{nth($gutters,2)};
                }

                .ky-row > * {
                    //padding: 0 0 0 nth($gutters,2);
                }
            }
        }
    }
}

